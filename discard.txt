  Future<List<dynamic>> getFavorites() async {
    List<dynamic> result = [];

    db
        .collection('sharebox_db')
        .where('inWishlist', isEqualTo: true)
        .snapshots()
        .listen((data) => data.documents.forEach((doc) {
              result.add(doc);
            }));
    return result;
  }

  Navigator.push(
                  context,
                  PageTransition(
                        child: TileScreen(
                          item: item,
                          onFavoritePressed: () async {
                            await changeWishlistState(item);
                          }
                        ),
                        type: PageTransitionType.rightToLeft,
                        curve: Curves.linear),
                  );

  SingleChildScrollView(
            child: Column(
              children: <Widget>[
                buildAnimation(),

            
                buildOneRow(size.height * .2),
                
              ],
            ),
          ),

  FutureBuilder<QuerySnapshot> buildFeature() {
    return FutureBuilder(
      future: getDocumentsAtBoot(),
      builder: (context, snapshot) {
        if (snapshot.hasData) {
          Random rnd = new Random();
          int random = rnd.nextInt(snapshot.data.documents.length);
          DocumentSnapshot chosen = snapshot.data.documents[random];
          ShareBoxItem curr = ShareBoxItem(
              category: chosen['category'],
              title: chosen['title'],
              imageBase64: chosen['imageBase64'],
              description: chosen['description'],
              house: chosen['house']);
          return FeaturedTile(
            item: curr,
            onFavoritePressed: () async {
              print('clicked fave');
              await changeWishlistState(curr);
            },
          );
        } else if (snapshot.hasError) {
          return Text("${snapshot.error}");
        } else {
          return CircularProgressIndicator();
        }
      },
    );
  }

  createItemDialog(BuildContext context) {
    return showDialog(
        context: context,
        builder: (context) {
          return SimpleDialog(
            contentPadding: EdgeInsets.all(0),
            children: <Widget>[
              Column(
                children: <Widget>[
                  ShareBoxItem.imageFromBase64(item.imageBase64),
                  SizedBox(height: 10.0),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      '${item.description}',
                      textAlign: TextAlign.left,
                      maxLines: 4,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                  SizedBox(height: 10.0),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: <Widget>[
                      SlimButton(
                          text: 'pick up', color: pinkPop, action: () {}),
                      SlimButton(
                        text: 'add to wishlist',
                        color: pinkPop,
                        action: () async {
                          await saveJsonData(item);
                        },
                      ),
                      SlimButton(text: 'X', color: Colors.red),
                    ],
                  ),
                  SizedBox(height: 10.0),
                ],
              ),
            ],
          );
        });
  }

  Future<bool> delay() {
    return Future.delayed(Duration(milliseconds: 1000)).then((onValue) => true);
  }

  

  FutureBuilder buildAnimation() {
    return FutureBuilder(
      future: delay(),
      builder: (context, snapshot) {
        if (snapshot.hasData) {
          return Container();
        } else {
          return Container(
            width: MediaQuery.of(context).size.width,
            height: MediaQuery.of(context).size.height,
            color: abColor,
            child: SpinKitWave(
              color: pinkPop,
              size: 50,
            ),
          );
        }
      },
    );
  }